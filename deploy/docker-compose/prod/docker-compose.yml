services:
  mysql-prime:
    image: mysql:8.0.41
    container_name: mysql-prime
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: prime_dev
      MYSQL_USER: prime
      MYSQL_PASSWORD: prime
    command: --default-authentication-plugin=mysql_native_password --lower_case_table_names=1
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-pmysql" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    extends:
      file: common-config.yml
      service: network-deploy-service

  prime-be-user:
    build:
      context: ../../../prime-be-user/
      dockerfile: Dockerfile
    container_name: prime-be-user
    ports:
      - "8070:8070"
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      prime-be-eureka:
        condition: service_healthy
      mysql-prime:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-config-server-config

  prime-be-eureka:
    build:
      context: ../../../prime-be-eureka/
      dockerfile: Dockerfile
    container_name: prime-be-eureka
    ports:
      - "8761:8761"
    networks:
      - prime-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    extends:
      file: common-config.yml
      service: microservice-config-eureka-config

  prime-be-project:
    build:
      context: ../../../prime-be-project/
      dockerfile: Dockerfile
    container_name: prime-be-project
    ports:
      - "8080:8080"
    depends_on:
      prime-be-eureka:
        condition: service_healthy
      mysql-prime:
        condition: service_healthy
      prime-be-user:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-config-server-config
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://prime-be-eureka:8761/eureka/

  prime-be-gateway:
    build:
      context: ../../../prime-be-gateway/
      dockerfile: Dockerfile
    container_name: prime-be-gateway
    ports:
      - "9000:9000"
    depends_on:
      prime-be-eureka:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-config-server-config

  frontend:
    build:
      context: ../../../prime-fe-management/
      dockerfile: Dockerfile
    container_name: prime-fe-management
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - prime-network
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend-dist:/usr/share/nginx/html
    extends:
      file: common-config.yml
      service: microservice-config-server-config

networks:
  prime-network:
    driver: "bridge"

volumes:
  mysql_data:
  frontend-dist:


